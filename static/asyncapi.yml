asyncapi: '2.0.0'
info:
  title: 'Smart Oven - MQTT API'
  version: '1.0.0'
  license:
    name: 'MIT License'
    url: 'https://github.com/banana-breads/SmartOven/blob/master/LICENSE'
  description: 'the mqtt spes sheet of the Smart Oven app IOT app'

servers:
  production:
    url: 'broker.emqx.io'
    protocol: 'mqtt'
    description: 'public, free, mqtt broker'
defaultContentType: 'application/json'

channels:
  BananaBreadSmartOven/connect:
    description: 'used to notify the server when a new device is connected'
    publish:
      message:
        name: 'connect message'
        payload:
          type: 'string'
  BananaBreadSmartOven/disconnect:
    description: 'used to notify the server when a connected device is disconnected'
    publish:
      message:
        name: 'disconnect message'
        payload:
          type: 'string'
  BananaBreadSmartOven/{device_id}/info/temperature:
    description: 'used by device to constantly publish temperature data'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/info_temperature'
  BananaBreadSmartOven/{device_id}/info/time:
    description: 'used by device to constantly publish time data'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/info_time'
  BananaBreadSmartOven/{device_id}/info/state:
    description: 'used by device to constantly publish state data'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/info_state'
  BananaBreadSmartOven/{device_id}/info/recipe_details:
    description: 'used by device to publish state data when requested'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/recipe_details'
  BananaBreadSmartOven/{device_id}/info/recipe_done:
    description: 'used to notify the server when the time if off'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/recipe_done'
  BananaBreadSmartOven/{device_id}/settings/set_state:
    description: 'used to change the state of a device'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/set_state'
  BananaBreadSmartOven/{device_id}/settings/set_recipe:
    description: 'used to change the current recipe settings on a device'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/set_recipe'
  BananaBreadSmartOven/{device_id}/settings/set_temperature:
    description: 'used to change the target temperature on a device'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/set_temperature'
  BananaBreadSmartOven/{device_id}/settings/set_time:
    description: 'used to change the cooking time on a device'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/set_time'
  BananaBreadSmartOven/{device_id}/request/get_recipe_details:
    description: 'used by server to request the current recipe details from a device'
    parameters:
      device_id:
        $ref: '#/components/parameters/device_id'
    publish:
      message:
        $ref: '#/components/messages/get_recipe_details'
components:
  parameters:
    device_id:
      description: 'Id of a connected device'
      schema:
        type: 'string'
  messages:
    info_temperature:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          current_temperature:
            type: 'integer'
            minimum: 0
            maximum: 250
          target_temperature:
            type: 'integer'
            minimum: 0
            maximum: 250
    info_time:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          time_elapsed:
            type: 'number'
            minimum: 0
            maximum: 720
          time_left:
            type: 'number'
            minimum: 0
            maximum: 720
          target_time:
            type: 'number'
            minimum: 0
            maximum: 720
    info_state:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          state:
            type: 'boolean'
    recipe_details:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          name:
            type: 'string'
          prep_details:
            type: 'string'
    recipe_done:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          message:
            type: 'string'
    set_state:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          state:
            type: 'boolean'
    set_recipe:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          name:
            type: 'string'
          prep_details:
            type: 'string'
          baking_temperature:
            type: 'integer'
          prep_time:
            type: 'integer'
    set_temperature:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          temperature:
            type: 'integer'
            minimum: 0
            maximum: 250
    set_time:
      contentType: 'application/json'
      payload:
        type: 'object'
        properties:
          time:
            type: 'integer'
            minimum: 0
            maximum: 720
    get_recipe_details:
      payload:
        type: 'object'
